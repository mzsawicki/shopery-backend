version: "3"
services:
  db:
    image: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - config.env
    ports:
      - "5432:5432"
  redis:
    image: redis/redis-stack-server
    ports:
      - "6379:6379"
    volumes:
      - ./redis-volume:/data
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - config.env
    volumes:
        - ./rabbitmq/data/:/var/lib/rabbitmq/
        - ./rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 5s
      retries: 3
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    env_file:
      - config.env
    command: server --console-address ":9001" /data
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    command: poetry run uvicorn src.api:app --host 0.0.0.0 --port 8000
    env_file:
      - config.env
    volumes:
      - ./:/application
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      rabbitmq:
        condition: service_healthy
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: poetry run taskiq worker src.common.tasks:broker --fs-discover
    env_file:
      - config.env
    volumes:
      - ./:/worker
    depends_on:
      rabbitmq:
        condition: service_healthy
  nginx:
    image: nginx:latest
    ports:
      - "8080:8080"
    volumes:
      - ./nginx_config.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
volumes:
  db_data:
    driver: local
  minio_storage:
  redis_data:
